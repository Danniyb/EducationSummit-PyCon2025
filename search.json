[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Conference Presentations",
    "section": "",
    "text": "Welcome to our collection of conference presentations focusing on educational technology and development tools. These presentations cover various aspects of modern software development, automated testing, and educational technology implementation."
  },
  {
    "objectID": "index.html#available-presentations",
    "href": "index.html#available-presentations",
    "title": "Conference Presentations",
    "section": "Available Presentations",
    "text": "Available Presentations\n\nAutomated and Configurable Programming Project Checking with Chasten\n\nLearn about automated project checking and configuration\nUnderstand how to implement efficient project validation\nExplore best practices for automated testing\n\nUp and Running with GitHub, GitHub Classroom, and GitHub Actions\n\nMaster GitHub workflow integration\nSet up GitHub Classroom for educational purposes\nImplement automated workflows with GitHub Actions\n\nExecExam: A Tool to Facilitate Effective Executable Examinations in Python\n\nDiscover tools for creating executable examinations\nLearn about Python-based testing frameworks\nImplement effective examination strategies\n\nBuilding and Deploying Course Websites with Python, Quarto, and Mkdocs\n\nCreate modern course websites\nImplement documentation with Mkdocs\nDeploy and maintain educational content"
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "Conference Presentations",
    "section": "Getting Started",
    "text": "Getting Started\nEach presentation is available in the slides section. You can navigate through the presentations using the navigation menu above. Each presentation includes:\n\nDetailed slides with code examples\nImplementation guides\nBest practices and recommendations\nAdditional resources and references"
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "Conference Presentations",
    "section": "Contributing",
    "text": "Contributing\nThese presentations are open source and available for educational purposes. Feel free to use and modify them according to your needs. If you find any issues or have suggestions for improvements, please contribute through our GitHub repository."
  },
  {
    "objectID": "slides/chasten/index.html#what-problem-are-we-solving",
    "href": "slides/chasten/index.html#what-problem-are-we-solving",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "What Problem Are We Solving?",
    "text": "What Problem Are We Solving?\n\n\nStudents may struggle to write efficient, readable code\nManual project review is time-consuming and error-prone\nMany courses face these challenges:\n\nData structures\nAlgorithm analysis\nSoftware engineering\n\nExisting tools focus on style, not semantic structure\nRegex is brittle, and AST tools are hard to prototype\n\n\n\n Project Goal: Chasten enables scalable and structure-aware feedback that effectively supports both instructors and students"
  },
  {
    "objectID": "slides/chasten/index.html#avoid-time-complexity-of-on²",
    "href": "slides/chasten/index.html#avoid-time-complexity-of-on²",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Avoid Time Complexity of \\(O(n²)\\)",
    "text": "Avoid Time Complexity of \\(O(n²)\\)\n\n\n# O(n) is acceptable\nseen = set()\nfor item in items:\n    if item in seen:\n        return True\n    seen.add(item)\n\n# O(n²) is not okay\nfor i in range(len(items)):\n    for j in range(len(items)):\n        if i != j \n         and items[i] == items[j]:\n            return True\n\n\n\n Goal: Automatically scan the source code that students submit to confirm that there are no inefficient looping constructs\n Challenge: Linters like Ruff and Pylint don’t have rules to detect nested control structures that either are or are not acceptable\n Build: An extensible tool allowing instructors to scan for arbitrary code patterns without detailed AST knowledge"
  },
  {
    "objectID": "slides/chasten/index.html#chasten-to-the-rescue",
    "href": "slides/chasten/index.html#chasten-to-the-rescue",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Chasten to the Rescue!",
    "text": "Chasten to the Rescue!\n\n\n Uses XPath to search Python’s AST\n Rules written in simple YAML\n Structure-first, not just style\n Outputs to JSON, CSV, or SQLite\n\n\n\n Result: Instructors define checks once and use Chasten to easily apply them at scale across all student submissions\n\n\n- name: \"nested-loops\"\n  code: \"PERF001\"\n  pattern: \"//For[descendant::For]\"\n  description: \"Detects doubly nested for-loops (e.g., O(n²))\""
  },
  {
    "objectID": "slides/chasten/index.html#lets-run-chasten",
    "href": "slides/chasten/index.html#lets-run-chasten",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Let’s Run Chasten!",
    "text": "Let’s Run Chasten!\n\nInstall the Tool\npipx install chasten  # Install Chasten in venv\npipx list             # Confirm installation\nchasten --help        # View available commands\n\n\nRun Chasten\nchasten analyze time-complexity-lab \\\n        --config chasten-configuration \\\n        --search-path time-complexity-lab \\\n        --save-directory time-complexity-results \\\n        --save\n\n\n\nSave results to a JSON file and produce console output\nConfigure the return code for different detection goals"
  },
  {
    "objectID": "slides/chasten/index.html#results-from-running-chasten",
    "href": "slides/chasten/index.html#results-from-running-chasten",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Results from Running Chasten",
    "text": "Results from Running Chasten\n\nNested Loop Analysis\n\n\n\nCheck ID\nCheck Name\nFile\nMatches\n\n\n\n\nPERF001\nnested-loops\nanalyze.py\n1\n\n\nPERF001\nnested-loops\ndisplay.py\n7\n\n\nPERF001\nnested-loops\nmain.py\n0\n\n\n\n\n\n Check ID → A unique short rule code (e.g., PERF001)\n\n\n Check Name → The rule name that matched (e.g., nested-loops)\n\n\n File → The Python file that the tool scanned (e.g., analyze.py)\n\n\n Matches → Number of times the pattern was detected in that file (e.g., 1 match)"
  },
  {
    "objectID": "slides/chasten/index.html#limitations-and-future-directions",
    "href": "slides/chasten/index.html#limitations-and-future-directions",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Limitations and Future Directions",
    "text": "Limitations and Future Directions\n\nLimitations of the Chasten Tool\n\n Doesn’t handle style, formatting, or type inference\n Not optimized for fast use in continuous integration\n Pattern matches through use of XPath on Python’s AST\n\nEmpirical Study of Chasten\n\n Frequency of false positives or false negatives?\n How do students respond to the tool’s feedback?\n Differences in scores with varied feedback types?"
  },
  {
    "objectID": "slides/chasten/index.html#key-takeaways",
    "href": "slides/chasten/index.html#key-takeaways",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\n Write declarative rules for AST-based code checks\n Focus on bespoke code structure patterns in Python\n Automated grading aligned with learning outcomes\n Generate data-rich insights into student code patterns\n\n\n\nTry out Chasten and contribute to its development!\n\n GitHub: https://github.com/AstuteSource/chasten\n PyPI: https://pypi.org/project/chasten/"
  },
  {
    "objectID": "slides/github-workflow/index.html#the-challenge-of-programming-assignments",
    "href": "slides/github-workflow/index.html#the-challenge-of-programming-assignments",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "The Challenge of Programming Assignments",
    "text": "The Challenge of Programming Assignments\n\nDistribution of starter code\nCollection of submissions\nProviding automated feedback\nManaging final assessment\nCoordinating all these tasks efficiently"
  },
  {
    "objectID": "slides/github-workflow/index.html#traditional-assignment-workflow-challenges",
    "href": "slides/github-workflow/index.html#traditional-assignment-workflow-challenges",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Traditional Assignment Workflow Challenges",
    "text": "Traditional Assignment Workflow Challenges\n\nEmail submission creates version chaos\nManual testing is time-consuming and error-prone\nLimited visibility into student progress\nFeedback is often delayed and disconnected from code"
  },
  {
    "objectID": "slides/github-workflow/index.html#enter-github-github-classroom-and-github-actions",
    "href": "slides/github-workflow/index.html#enter-github-github-classroom-and-github-actions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Enter GitHub, GitHub Classroom, and GitHub Actions",
    "text": "Enter GitHub, GitHub Classroom, and GitHub Actions\nA complete ecosystem for programming education that:\n\nLeverages industry-standard tools\nPromotes good development practices\nAutomates tedious tasks\nProvides immediate feedback\nCreates a portfolio for students"
  },
  {
    "objectID": "slides/github-workflow/index.html#benefits-for-students",
    "href": "slides/github-workflow/index.html#benefits-for-students",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Benefits for Students",
    "text": "Benefits for Students\n\nLearn professional version control practices\nGet immediate feedback on their code\nClear indication of what to complete (TODOs)\nWork in a real development environment\nBuild a portfolio of completed projects\nPrepare for collaborative development"
  },
  {
    "objectID": "slides/github-workflow/index.html#benefits-for-instructors",
    "href": "slides/github-workflow/index.html#benefits-for-instructors",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Benefits for Instructors",
    "text": "Benefits for Instructors\n\nAutomated distribution of assignments\nCentralized submission collection\nAutomated testing and grading assistance\nClear visibility into student progress\nConsistent environment for all students\nRich feedback options (issues, PRs, comments)"
  },
  {
    "objectID": "slides/github-workflow/index.html#getting-started-the-workflow",
    "href": "slides/github-workflow/index.html#getting-started-the-workflow",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Getting Started: The Workflow",
    "text": "Getting Started: The Workflow\n\nCreate solution repository with tests\nCreate starter repository with TODOs\nSet up GitHub Classroom\nCreate and distribute assignments\nMonitor student progress\nProvide feedback through GitHub\nAssess completed work"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-1-creating-the-solution-repository",
    "href": "slides/github-workflow/index.html#step-1-creating-the-solution-repository",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 1: Creating the Solution Repository",
    "text": "Step 1: Creating the Solution Repository\n# Create new repository with complete solution\ngit init solution-repo\ncd solution-repo\n# Add your complete solution code\n\nInclude a comprehensive test suite with pytest\nSet up linting with flake8/pylint\nCreate a GitHub Actions workflow\nEnsure all tests pass with your solution"
  },
  {
    "objectID": "slides/github-workflow/index.html#solution-repository-structure",
    "href": "slides/github-workflow/index.html#solution-repository-structure",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Solution Repository Structure",
    "text": "Solution Repository Structure\nsolution-repo/\n├── src/\n│   └── solution.py\n├── tests/\n│   └── test_solution.py\n├── .github/\n│   └── workflows/\n│       └── python-checks.yml\n├── requirements.txt\n└── README.md"
  },
  {
    "objectID": "slides/github-workflow/index.html#github-actions-workflow-example",
    "href": "slides/github-workflow/index.html#github-actions-workflow-example",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "GitHub Actions Workflow Example",
    "text": "GitHub Actions Workflow Example\nname: Python Checks\n\non: [push]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: '3.10'\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install pytest flake8\n        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi\n    - name: Lint with flake8\n      run: flake8 src tests\n    - name: Test with pytest\n      run: pytest"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-2-implementation-ablation---creating-the-starter",
    "href": "slides/github-workflow/index.html#step-2-implementation-ablation---creating-the-starter",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 2: Implementation Ablation - Creating the Starter",
    "text": "Step 2: Implementation Ablation - Creating the Starter\nWhat is implementation ablation?\n\nSystematically remove implementation details from your solution\nReplace with well-documented TODOs\nLeave structure intact for students to complete\nKeep tests to guide students"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-of-implementation-ablation",
    "href": "slides/github-workflow/index.html#example-of-implementation-ablation",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example of Implementation Ablation",
    "text": "Example of Implementation Ablation\nSolution code:\ndef calculate_grade(scores):\n    total = sum(scores)\n    average = total / len(scores)\n    \n    if average &gt;= 90:\n        return 'A'\n    elif average &gt;= 80:\n        return 'B'\n    elif average &gt;= 70:\n        return 'C'\n    elif average &gt;= 60:\n        return 'D'\n    else:\n        return 'F'"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-of-implementation-ablation-1",
    "href": "slides/github-workflow/index.html#example-of-implementation-ablation-1",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example of Implementation Ablation",
    "text": "Example of Implementation Ablation\nStarter code:\ndef calculate_grade(scores):\n    # TODO: Calculate the average score\n    # Hint: You'll need to find the sum and divide by the count\n    \n    # TODO: Determine the letter grade based on the average\n    # A: 90+, B: 80-89, C: 70-79, D: 60-69, F: below 60\n    \n    return None  # Replace with your implementation"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-3-setting-up-github-classroom",
    "href": "slides/github-workflow/index.html#step-3-setting-up-github-classroom",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 3: Setting Up GitHub Classroom",
    "text": "Step 3: Setting Up GitHub Classroom\n\nCreate a GitHub organization for your class\nAuthorize GitHub Classroom\nCreate a new classroom linked to your organization\nInvite teaching assistants as organization admins"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-4-creating-an-assignment",
    "href": "slides/github-workflow/index.html#step-4-creating-an-assignment",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 4: Creating an Assignment",
    "text": "Step 4: Creating an Assignment\n\nSelect “New Assignment” in GitHub Classroom\nChoose individual or group assignment\nName your assignment\nSet deadline and visibility options\nImport your starter repository\nEnable automated testing"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-5-distributing-the-assignment",
    "href": "slides/github-workflow/index.html#step-5-distributing-the-assignment",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 5: Distributing the Assignment",
    "text": "Step 5: Distributing the Assignment\n\nGenerate invitation link\nShare with students\nStudents click link and accept assignment\nGitHub automatically creates private student repositories\nStudents clone locally and start working"
  },
  {
    "objectID": "slides/github-workflow/index.html#student-experience",
    "href": "slides/github-workflow/index.html#student-experience",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Student Experience",
    "text": "Student Experience\n\nAccept assignment through unique link\nRepository created with starter code\nClone repository locally\nComplete TODOs guided by tests\nPush changes to GitHub\nGet immediate feedback from GitHub Actions"
  },
  {
    "objectID": "slides/github-workflow/index.html#automated-feedback-with-github-actions",
    "href": "slides/github-workflow/index.html#automated-feedback-with-github-actions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Automated Feedback with GitHub Actions",
    "text": "Automated Feedback with GitHub Actions\n\nTests run automatically on every push\nStudents see red ❌ or green ✅ status checks\nDetailed feedback in Actions tab\nTesting failures highlight what’s still incomplete"
  },
  {
    "objectID": "slides/github-workflow/index.html#comprehensive-feedback-options",
    "href": "slides/github-workflow/index.html#comprehensive-feedback-options",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Comprehensive Feedback Options",
    "text": "Comprehensive Feedback Options\nGitHub provides multiple feedback channels:\n\nIn-line comments on specific code lines\nIssue creation for general feedback\nPull request reviews for detailed assessment\nAutomated checks for immediate technical feedback"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-issue-based-feedback",
    "href": "slides/github-workflow/index.html#example-issue-based-feedback",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example: Issue-Based Feedback",
    "text": "Example: Issue-Based Feedback\n\n## Algorithm Efficiency\n\nYour solution works but uses O(n²) time complexity when \nan O(n) solution is possible. Consider using a hash map \ninstead of nested loops.\n\n## Code Structure\n\nGreat job breaking down the problem into functions!\nYour solution is well-organized and easy to follow."
  },
  {
    "objectID": "slides/github-workflow/index.html#optional-integrating-with-external-tools",
    "href": "slides/github-workflow/index.html#optional-integrating-with-external-tools",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Optional: Integrating with External Tools",
    "text": "Optional: Integrating with External Tools\nGitHub Actions can integrate with:\n\nPytest for test coverage\nFlake8/Pylint for style checking\nChasten for AST-based pattern checking\nCustom grading tool such as ExecExam\nAnd many more!"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-integration-with-chasten",
    "href": "slides/github-workflow/index.html#example-integration-with-chasten",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example: Integration with Chasten",
    "text": "Example: Integration with Chasten\n- name: Check with Chasten\n  run: |\n    pip install chasten\n    chasten check --config .chasten.yml src/"
  },
  {
    "objectID": "slides/github-workflow/index.html#practical-tips-from-experience",
    "href": "slides/github-workflow/index.html#practical-tips-from-experience",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Practical Tips from Experience",
    "text": "Practical Tips from Experience\n\nStart with simple assignments to build familiarity\nCreate clear README files with setup instructions\nInclude CI badges in README to show test status\nUse descriptive commit messages for teaching moments\nConsider a practice assignment for GitHub onboarding"
  },
  {
    "objectID": "slides/github-workflow/index.html#common-challenges-and-solutions",
    "href": "slides/github-workflow/index.html#common-challenges-and-solutions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Common Challenges and Solutions",
    "text": "Common Challenges and Solutions\n\n\n\nChallenges\nSolutions\n\n\n\n\nGit confusion\nProvide cheat sheet and office hours\n\n\nMerge conflicts\nTeach basic conflict resolution\n\n\nTest failures\nMake test output student-friendly\n\n\nMissing setup\nInclude detailed environment setup\n\n\nPrivacy concerns\nUse private repositories"
  },
  {
    "objectID": "slides/github-workflow/index.html#limitations-to-be-aware-of",
    "href": "slides/github-workflow/index.html#limitations-to-be-aware-of",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Limitations to Be Aware Of",
    "text": "Limitations to Be Aware Of\n\nLearning curve for Git and GitHub\nSetup time for first assignments\nNeed for internet access\nManaging organization permissions"
  },
  {
    "objectID": "slides/github-workflow/index.html#key-takeaways",
    "href": "slides/github-workflow/index.html#key-takeaways",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nGitHub Classroom creates realistic development workflows\nAutomated feedback saves instructor time\nStudents learn industry-standard tools and practices\nImplementation ablation guides student learning\nComprehensive feedback through multiple channels"
  },
  {
    "objectID": "slides/github-workflow/index.html#questions",
    "href": "slides/github-workflow/index.html#questions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Questions?",
    "text": "Questions?\nThank you for your attention!"
  },
  {
    "objectID": "slides/index.html",
    "href": "slides/index.html",
    "title": "Slides",
    "section": "",
    "text": "View Presentation\nLearn about automated project checking and configuration\nUnderstand how to implement efficient project validation\nExplore best practices for automated testing\n\n\n\n\n\nView Presentation\nMaster GitHub workflow integration\nSet up GitHub Classroom for educational purposes\nImplement automated workflows with GitHub Actions\n\n\n\n\n\nView Presentation\nDiscover tools for creating executable examinations\nLearn about Python-based testing frameworks\nImplement effective examination strategies\n\n\n\n\n\nView Presentation\nCreate modern course websites\nImplement documentation with Mkdocs\nDeploy and maintain educational content\n\n\n\n\n\nUse the navigation menu at the top of the page to move between presentations. Each presentation includes:\n\nDetailed slides with code examples\nImplementation guides\nBest practices and recommendations\nAdditional resources and references"
  },
  {
    "objectID": "slides/index.html#available-presentations",
    "href": "slides/index.html#available-presentations",
    "title": "Slides",
    "section": "",
    "text": "View Presentation\nLearn about automated project checking and configuration\nUnderstand how to implement efficient project validation\nExplore best practices for automated testing\n\n\n\n\n\nView Presentation\nMaster GitHub workflow integration\nSet up GitHub Classroom for educational purposes\nImplement automated workflows with GitHub Actions\n\n\n\n\n\nView Presentation\nDiscover tools for creating executable examinations\nLearn about Python-based testing frameworks\nImplement effective examination strategies\n\n\n\n\n\nView Presentation\nCreate modern course websites\nImplement documentation with Mkdocs\nDeploy and maintain educational content"
  },
  {
    "objectID": "slides/index.html#navigation",
    "href": "slides/index.html#navigation",
    "title": "Slides",
    "section": "",
    "text": "Use the navigation menu at the top of the page to move between presentations. Each presentation includes:\n\nDetailed slides with code examples\nImplementation guides\nBest practices and recommendations\nAdditional resources and references"
  },
  {
    "objectID": "slides/execexam/index.html#what-is-an-executable-examination",
    "href": "slides/execexam/index.html#what-is-an-executable-examination",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "What is an Executable Examination?",
    "text": "What is an Executable Examination?\n\n Goal: Assess a student’s ability to program with real tools\n\nA student writes, modifies, and runs code to solve a real problem\nGraded via automated tests that use Pytest tests and assertions\nUnlike static examinations an executable examination assesses:\n\nProgramming logic\nDebugging ability\nTool use (e.g., text editor, terminal, IDE, and Git)\n\n\n\n\n🎯 Like a take-home project — but precise, consistent, and scalable!\nReference: Chris Bourke, Yael Erez, and Orit Hazzan. 2023. “Executable Exams: Taxonomy, Implementation and Prospects”. In Proceedings of 54th SIGCSE."
  },
  {
    "objectID": "slides/execexam/index.html#problems-with-computing-assessments",
    "href": "slides/execexam/index.html#problems-with-computing-assessments",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Problems with Computing Assessments",
    "text": "Problems with Computing Assessments\n\n Why do we need better assessments?\n\nManual grading is slow and inconsistent\nStudents often don’t know why their code fails\nFeedback is shallow or missing altogether\nLimited assessment of effective tool use\nPytest not a good fit for assessment\n\n\n\n🚫 Test assertion failure is not enough! ExecExam is a compelling alternative to either manual assessment or running only Pytest."
  },
  {
    "objectID": "slides/execexam/index.html#what-is-execexam",
    "href": "slides/execexam/index.html#what-is-execexam",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "What is ExecExam?",
    "text": "What is ExecExam?\n\n Scalable, feedback-rich assessment tool built in Python\n\n\n\nRuns Pytest tests on student code\nReports all test failures and context\nClearly explains why a test failed\nSuggests how to fix tested function\nUses LLMs for enhanced feedback\n\n\n\n\n\n Next Step: Explore ExecExam’s features and how teachers can integrate them into the assessments for their programming courses!"
  },
  {
    "objectID": "slides/execexam/index.html#understanding-execexams-output",
    "href": "slides/execexam/index.html#understanding-execexams-output",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Understanding ExecExam’s Output",
    "text": "Understanding ExecExam’s Output"
  },
  {
    "objectID": "slides/execexam/index.html#key-features-of-execexam",
    "href": "slides/execexam/index.html#key-features-of-execexam",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Key Features of ExecExam",
    "text": "Key Features of ExecExam\n\n Why use ExecExam for your next assessment?\n\n\n🧪 Configured Pytest runs for streamlined assessment\n💻 Runs on student laptop through assessment process\n📜 Provides contextualized, detailed test failure reports\n⚙️ Integrates with GitHub and GitHub Actions for CI/CD\n🧠 Features flexible, democratized LLM-powered debugging\n🔁 Offers actionable insights to instructors and students!\n🛠️ Open-source tool collaboratively developed on GitHub"
  },
  {
    "objectID": "slides/execexam/index.html#getting-started-with-execexam",
    "href": "slides/execexam/index.html#getting-started-with-execexam",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Getting Started with ExecExam",
    "text": "Getting Started with ExecExam\n How instructors can adopt automated assessments\n\n\nCreate a solution repository\n\nDesign scaffolded coding tasks\nWrite test cases using Pytest\nAdd ExecExam as a dependency\nUse GatorGrader to run all checks\n\nUsing solution ablation to create a starter repository\nGitHub Classroom distributes and receives examinations"
  },
  {
    "objectID": "slides/execexam/index.html#conclusions-and-future-work",
    "href": "slides/execexam/index.html#conclusions-and-future-work",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Conclusions and Future Work",
    "text": "Conclusions and Future Work\n\n\n📊 Analytics and Instructor Features\n\nStore test outcomes and feedback over time\nVisualize student debugging and improvement paths\nLog LLM interactions to evaluate effectiveness\nHold out hidden test cases for instructor-only grading\n\n🧠 Adaptive Feedback Loops\n\nTailor feedback complexity to student performance\nAllow students to rate different types of LLM feedback\n\n\n\n\n\n🔗 GitHub Repository: https://github.com/GatorEducator/execexam\n💻 PyPI: https://pypi.org/project/execexam/"
  },
  {
    "objectID": "slides/course-websites/index.html#what-problem-are-we-solving",
    "href": "slides/course-websites/index.html#what-problem-are-we-solving",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "What Problem Are We Solving?",
    "text": "What Problem Are We Solving?\n\n\nCourse sites as static archives rather than living resources\nStudents view materials as products to consume not projects to contribute to, limiting learning and engagement\nInteractive examples require separate tools or platforms\nContent becomes quickly outdated without a sustainable update process that leverages industry-standard tools\n\n\n\n Ultimate Goal: Introduce how using packages like Quarto make it possible to create interactive and maintainable course websites"
  },
  {
    "objectID": "slides/course-websites/index.html#building-and-deploying-with-quarto",
    "href": "slides/course-websites/index.html#building-and-deploying-with-quarto",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Building and Deploying with Quarto",
    "text": "Building and Deploying with Quarto\n\n\nQuarto: Accessible markdown-based framework\nPython + WebAssembly: Easily run Python in the browser\nGitHub: Version control and collaborative workflows\nGitHub Actions: Automated testing and deployment\n\n\n\n\n Ultimate Goal: Build content-focused, interactive, collaborative course sites that instructors can maintain with minimal effort\n Next Steps: Give examples of content you can immediately use! See https://github.com/GatorEducator/PyCon2025-EducationAndTypingSummit-Presentations for more details!"
  },
  {
    "objectID": "slides/course-websites/index.html#explore-use-of-the-linkedlist",
    "href": "slides/course-websites/index.html#explore-use-of-the-linkedlist",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Explore Use of the LinkedList",
    "text": "Explore Use of the LinkedList\n\n\n\n\n\n\n\n\n Task: Visualize ListNode and LinkedList and explain the True outputs!"
  },
  {
    "objectID": "slides/course-websites/index.html#setting-up-the-course-infrastructure",
    "href": "slides/course-websites/index.html#setting-up-the-course-infrastructure",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Setting Up the Course Infrastructure",
    "text": "Setting Up the Course Infrastructure\n\nCreate a GitHub repository with Quarto structure\nConfigure navigation, styling, and organization in _quarto.yml\nSet up GitHub Actions for automated deployment\nCreate templates for student contributions\nPublish to GitHub Pages or Netlify"
  },
  {
    "objectID": "slides/course-websites/index.html#the-instructors-role",
    "href": "slides/course-websites/index.html#the-instructors-role",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "The Instructor’s Role",
    "text": "The Instructor’s Role\n\n\nCreate core course content and structure\nEstablish contribution guidelines\nReview and provide feedback on student submissions\nGuide collaborative knowledge building"
  },
  {
    "objectID": "slides/course-websites/index.html#how-students-contribute",
    "href": "slides/course-websites/index.html#how-students-contribute",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "How Students Contribute",
    "text": "How Students Contribute\n\nFork the repository and create content in their assigned folder\nWrite reflections and examples in simple Markdown with code\nSubmit a Pull Request for review and feedback\nContent is automatically published when approved"
  },
  {
    "objectID": "slides/course-websites/index.html#real-world-example",
    "href": "slides/course-websites/index.html#real-world-example",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Real World Example",
    "text": "Real World Example\n\n\nAlgorithmology.org\nAlgorithmology GitHub repository"
  },
  {
    "objectID": "slides/course-websites/index.html#educational-benefits",
    "href": "slides/course-websites/index.html#educational-benefits",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Educational Benefits",
    "text": "Educational Benefits\n\nLearn by Contributing: Students practice real-world technical documentation\nCode + Context: Code always presented with educational context\nLiterate Programming: Encourages explaining code, not just writing it\nContinuous Improvement: Course materials evolve each semester"
  },
  {
    "objectID": "slides/course-websites/index.html#technical-advantages",
    "href": "slides/course-websites/index.html#technical-advantages",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Technical Advantages",
    "text": "Technical Advantages\n\n\nLow Barrier to Entry: Markdown is easier than HTML/CSS/JS\nFocus on Content: Technical details are abstracted away\nInteractive Examples: Code runs in the browser without installation\nFull-Text Search: Find anything across all course materials\nDeveloper Workflow: Students learn how to collaborate using industry-standard tools"
  },
  {
    "objectID": "slides/course-websites/index.html#future-improvements",
    "href": "slides/course-websites/index.html#future-improvements",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Future Improvements",
    "text": "Future Improvements\n\n\nFull browser-based IDE experience\nBetter error messages for WebAssembly Python\nImplementation of a note taking tool, allowing students to take notes in the browser by commenting on the slides"
  },
  {
    "objectID": "slides/course-websites/index.html#why-you-should-consider-this-approach",
    "href": "slides/course-websites/index.html#why-you-should-consider-this-approach",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Why You Should Consider This Approach",
    "text": "Why You Should Consider This Approach\n\nStudent Ownership: Contributions create investment in the course\nLiving Knowledge Base: Materials improve rather than decay over time\nPractical Skills: Industry tools in an educational context\nTransparency: Public materials encourage higher quality work\nScalability: Works for any course size, from small seminars to large lectures"
  }
]