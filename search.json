[
  {
    "objectID": "conference-presentations/slides/execexam/index.html#what-is-an-execuatable-examination",
    "href": "conference-presentations/slides/execexam/index.html#what-is-an-execuatable-examination",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "What is an Execuatable Examination?",
    "text": "What is an Execuatable Examination?\n\nAssessing real programming ability\n\nA student writes, modifies, and runs code to solve a real problem\nGraded via automated tests (e.g.¬†Pytest)\nUnlike static exams, this tests:\n\nProgramming logic\nDebugging ability\nTool use (editor, terminal, Git)\n\n\nüéØ Like a take-home project ‚Äî but precise, consistent, and scalable"
  },
  {
    "objectID": "conference-presentations/slides/execexam/index.html#the-problem",
    "href": "conference-presentations/slides/execexam/index.html#the-problem",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "The Problem",
    "text": "The Problem\nWhy do we need better assessments?\n\nManual grading is slow and inconsistent\nStudents often don‚Äôt know why their code fails\nFeedback is shallow or missing altogether\n\nüö´ ‚ÄúTest failed‚Äù isn‚Äôt enough."
  },
  {
    "objectID": "conference-presentations/slides/execexam/index.html#what-is-execexam",
    "href": "conference-presentations/slides/execexam/index.html#what-is-execexam",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "What is ExecExam?",
    "text": "What is ExecExam?\nScalable, feedback-rich assessment tool\n\nRuns Pytest on student code\nUnlike Pytest, continues past the first failure\nExplains why a test failed\nSuggests how to fix it\nUtilizes LLMs for even better feedback"
  },
  {
    "objectID": "conference-presentations/slides/execexam/index.html#key-features",
    "href": "conference-presentations/slides/execexam/index.html#key-features",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Key Features",
    "text": "Key Features\nWhy use ExecExam?\n\nüß™ Full Pytest coverage, Streamlines assessment\nüíª Can be run throughout the student coding process\nüß† AI-powered failure analysis\n‚öôÔ∏è GitHub integration, easy CI/CD\nüîÅ Enhance the learning experience by offering actionable insights throughout the coding process"
  },
  {
    "objectID": "conference-presentations/slides/execexam/index.html#for-instructors",
    "href": "conference-presentations/slides/execexam/index.html#for-instructors",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "For Instructors",
    "text": "For Instructors\nHow to adopt it\n\nDesign scaffolded coding tasks\nWrite tests\nDeploy with GitHub Actions or CLI\nGrade fairly, at scale\n\nüß∞ Lightweight setup‚Äîjust Python, Git, and your test cases"
  },
  {
    "objectID": "conference-presentations/slides/execexam/index.html#future-work",
    "href": "conference-presentations/slides/execexam/index.html#future-work",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Future Work",
    "text": "Future Work\n\nWhat‚Äôs next for ExecExam?\n\nüìä Analytics & Instructor Features\n\nStore test outcomes and feedback over time\nVisualize student debugging and improvement paths\nLog LLM interactions to evaluate effectiveness\nHold out hidden test cases for instructor-only grading\n\nüß† Adaptive Feedback Loops\n\nTailor feedback complexity to student performance\nAllow students to rate LLM feedback"
  },
  {
    "objectID": "conference-presentations/slides/execexam/index.html#key-takeaways",
    "href": "conference-presentations/slides/execexam/index.html#key-takeaways",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nBetter exam grading, better learning\n\nHelps students debug and learn\nSaves teachers time\nMore fair + consistent grading\nScales to large classes\n\n\n\nüöÄ Try ExecExam: Let‚Äôs build smarter CS assessments\n\nüîó GitHub Repository: https://github.com/GatorEducator/execexam\nüíª PyPI: https://pypi.org/project/execexam/\nü§ù Reach out or contribute\n\nPallas-Athena Cain: cain01@allegheny.edu\nGregory M. Kapfhammer: gkapfhammer@allegheny.edu\n\n\nü¶ö Consider a birds of a feather session about automated grading"
  },
  {
    "objectID": "conference-presentations/slides/execexam/index.html#references",
    "href": "conference-presentations/slides/execexam/index.html#references",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "References",
    "text": "References\n\n\nJo√£o Paulo Barros, Lu√≠s Estevens, Rui Dias, Rui Pais, and Elisabete Soeiro. 2003. Using lab exams to ensure programming practice in an introductory programming course. SIGCSE Bull. 35, 3 (September 2003), 16‚Äì20. https://doi.org/10.1145/961290.961519\nJonathan Corley, Ana Stanescu, Lewis Baumstark, and Michael C. Orsega. 2020. Paper Or IDE? The Impact of Exam Format on Student Performance in a CS1 Course. In Proceedings of the 51st ACM Technical Symposium on Computer Science Education (SIGCSE ‚Äô20). Association for Computing Machinery, New York, NY, USA, 706‚Äì712. https://doi.org/10.1145/3328778.3366857\nScott Grissom, Laurie Murphy, Ren√©e McCauley, and Sue Fitzgerald. 2016. Paper vs.¬†Computer-based Exams: A Study of Errors in Recursive Binary Tree Algorithms. In Proceedings of the 47th ACM Technical Symposium on Computing Science Education (SIGCSE ‚Äô16). Association for Computing Machinery, New York, NY, USA, 6‚Äì11. https://doi.org/10.1145/2839509.2844587\nSevkli, Z. 2024. Assessing the Impact of Open-Resource Access on Student Performance in Computer-Based Examinations. In Proceedings of the 2024 ASEE Annual Conference & Exposition, Portland, Oregon. https://doi.org/10.18260/1-2‚Äì46619\nVesa Lappalainen, Antti-Jussi Lakanen, and Harri H√∂gmander. 2016. Paper-based vs computer-based exams in CS1. In Proceedings of the 16th Koli Calling International Conference on Computing Education Research (Koli Calling ‚Äô16). Association for Computing Machinery, New York, NY, USA, 172‚Äì173. https://doi.org/10.1145/2999541.2999565"
  },
  {
    "objectID": "slides/course-websites/index.html#what-problem-are-we-solving",
    "href": "slides/course-websites/index.html#what-problem-are-we-solving",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "What Problem Are We Solving?",
    "text": "What Problem Are We Solving?\n\n\nCourse sites as static archives rather than living resources\nStudents view materials as products to consume not projects to contribute to, limiting learning and engagement\nInteractive examples require separate tools or platforms\nContent becomes quickly outdated without a sustainable update process that leverages industry-standard tools\n\n\n\n Ultimate Goal: Introduce how using packages like Quarto make it possible to create interactive and maintainable course websites"
  },
  {
    "objectID": "slides/course-websites/index.html#building-and-deploying-with-quarto",
    "href": "slides/course-websites/index.html#building-and-deploying-with-quarto",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Building and Deploying with Quarto",
    "text": "Building and Deploying with Quarto\n\n\nQuarto: Accessible markdown-based framework\nPython + WebAssembly: Easily run Python in the browser\nGitHub: Version control and collaborative workflows\nGitHub Actions: Automated testing and deployment\n\n\n\n\n Ultimate Goal: Build content-focused, interactive, collaborative course sites that instructors can maintain with minimal effort\n Next Steps: Give examples of content you can immediately use! See https://github.com/GatorEducator/PyCon2025-EducationAndTypingSummit-Presentations for more details!"
  },
  {
    "objectID": "slides/course-websites/index.html#explore-use-of-the-linkedlist",
    "href": "slides/course-websites/index.html#explore-use-of-the-linkedlist",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Explore Use of the LinkedList",
    "text": "Explore Use of the LinkedList\n\n\n\n\n\n\n\n\n Task: Visualize ListNode and LinkedList and explain the True outputs!"
  },
  {
    "objectID": "slides/course-websites/index.html#setting-up-the-course-infrastructure",
    "href": "slides/course-websites/index.html#setting-up-the-course-infrastructure",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Setting Up the Course Infrastructure",
    "text": "Setting Up the Course Infrastructure\n\nCreate a GitHub repository with Quarto structure\nConfigure navigation, styling, and organization in _quarto.yml\nSet up GitHub Actions for automated deployment\nCreate templates for student contributions\nPublish to GitHub Pages or Netlify"
  },
  {
    "objectID": "slides/course-websites/index.html#the-instructors-role",
    "href": "slides/course-websites/index.html#the-instructors-role",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "The Instructor‚Äôs Role",
    "text": "The Instructor‚Äôs Role\n\n\nCreate core course content and structure\nEstablish contribution guidelines\nReview and provide feedback on student submissions\nGuide collaborative knowledge building"
  },
  {
    "objectID": "slides/course-websites/index.html#how-students-contribute",
    "href": "slides/course-websites/index.html#how-students-contribute",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "How Students Contribute",
    "text": "How Students Contribute\n\nFork the repository and create content in their assigned folder\nWrite reflections and examples in simple Markdown with code\nSubmit a Pull Request for review and feedback\nContent is automatically published when approved"
  },
  {
    "objectID": "slides/course-websites/index.html#real-world-example",
    "href": "slides/course-websites/index.html#real-world-example",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Real World Example",
    "text": "Real World Example\n\n\nAlgorithmology.org\nAlgorithmology GitHub repository"
  },
  {
    "objectID": "slides/course-websites/index.html#educational-benefits",
    "href": "slides/course-websites/index.html#educational-benefits",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Educational Benefits",
    "text": "Educational Benefits\n\nLearn by Contributing: Students practice real-world technical documentation\nCode + Context: Code always presented with educational context\nLiterate Programming: Encourages explaining code, not just writing it\nContinuous Improvement: Course materials evolve each semester"
  },
  {
    "objectID": "slides/course-websites/index.html#technical-advantages",
    "href": "slides/course-websites/index.html#technical-advantages",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Technical Advantages",
    "text": "Technical Advantages\n\n\nLow Barrier to Entry: Markdown is easier than HTML/CSS/JS\nFocus on Content: Technical details are abstracted away\nInteractive Examples: Code runs in the browser without installation\nFull-Text Search: Find anything across all course materials\nDeveloper Workflow: Students learn how to collaborate using industry-standard tools"
  },
  {
    "objectID": "slides/course-websites/index.html#future-improvements",
    "href": "slides/course-websites/index.html#future-improvements",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Future Improvements",
    "text": "Future Improvements\n\n\nFull browser-based IDE experience\nBetter error messages for WebAssembly Python\nImplementation of a note taking tool, allowing students to take notes in the browser by commenting on the slides"
  },
  {
    "objectID": "slides/course-websites/index.html#why-you-should-consider-this-approach",
    "href": "slides/course-websites/index.html#why-you-should-consider-this-approach",
    "title": "Building and Deploying Course Websites with Python, Quarto, and Mkdocs",
    "section": "Why You Should Consider This Approach",
    "text": "Why You Should Consider This Approach\n\nStudent Ownership: Contributions create investment in the course\nLiving Knowledge Base: Materials improve rather than decay over time\nPractical Skills: Industry tools in an educational context\nTransparency: Public materials encourage higher quality work\nScalability: Works for any course size, from small seminars to large lectures"
  },
  {
    "objectID": "slides/execexam/index.html#what-is-an-executable-examination",
    "href": "slides/execexam/index.html#what-is-an-executable-examination",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "What is an Executable Examination?",
    "text": "What is an Executable Examination?\n\n Goal: Assess a student‚Äôs ability to program with real tools\n\nA student writes, modifies, and runs code to solve a real problem\nGraded via automated tests that use Pytest tests and assertions\nUnlike static examinations an executable examination assesses:\n\nProgramming logic\nDebugging ability\nTool use (e.g., text editor, terminal, IDE, and Git)\n\n\n\n\nüéØ Like a take-home project ‚Äî but precise, consistent, and scalable!\nReference: Chris Bourke, Yael Erez, and Orit Hazzan. 2023. ‚ÄúExecutable Exams: Taxonomy, Implementation and Prospects‚Äù. In Proceedings of 54th SIGCSE."
  },
  {
    "objectID": "slides/execexam/index.html#problems-with-computing-assessments",
    "href": "slides/execexam/index.html#problems-with-computing-assessments",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Problems with Computing Assessments",
    "text": "Problems with Computing Assessments\n\n Why do we need better assessments?\n\nManual grading is slow and inconsistent\nStudents often don‚Äôt know why their code fails\nFeedback is shallow or missing altogether\nLimited assessment of effective tool use\nPytest not a good fit for assessment\n\n\n\nüö´ ‚ÄúTest failed‚Äù isn‚Äôt enough! ExecExam presents a compelling alternative to either manual assessment or running only Pytest."
  },
  {
    "objectID": "slides/execexam/index.html#what-is-execexam",
    "href": "slides/execexam/index.html#what-is-execexam",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "What is ExecExam?",
    "text": "What is ExecExam?\n\n Scalable, feedback-rich assessment tool built in Python\n\n\n\nRuns Pytest tests on student code\nReports all test failures and context\nClearly explains why a test failed\nSuggests how to fix tested function\nUses LLMs for enhanced feedback\n\n\n\n\n\n Next Step: Explore ExecExam‚Äôs features and how teachers can integrate them into the assessments for their programming courses!"
  },
  {
    "objectID": "slides/execexam/index.html#understanding-execexams-output",
    "href": "slides/execexam/index.html#understanding-execexams-output",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Understanding ExecExam‚Äôs Output",
    "text": "Understanding ExecExam‚Äôs Output"
  },
  {
    "objectID": "slides/execexam/index.html#key-features-of-execexam",
    "href": "slides/execexam/index.html#key-features-of-execexam",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Key Features of ExecExam",
    "text": "Key Features of ExecExam\n\n Why use ExecExam for your next assessment?\n\n\nüß™ Configured Pytest runs for streamlined assessment\nüíª Runs on student laptop through assessment process\nüìú Provides contextualized, detailed test failure reports\n‚öôÔ∏è Integrates with GitHub and GitHub Actions for CI/CD\nüß† Features flexible, democratized LLM-powered debugging\nüîÅ Offers actionable insights to instructors and students!\nüõ†Ô∏è Open-source tool collaboratively developed on GitHub"
  },
  {
    "objectID": "slides/execexam/index.html#getting-started-with-execexam",
    "href": "slides/execexam/index.html#getting-started-with-execexam",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Getting Started with ExecExam",
    "text": "Getting Started with ExecExam\n How instructors can adopt automated assessments\n\n\nCreate a solution repository\n\nDesign scaffolded coding tasks\nWrite test cases using Pytest\nAdd ExecExam as a dependency\nUse GatorGrader to run all checks\n\nUsing solution ablation to create a starter repository\nGitHub Classroom distributes and receives examinations"
  },
  {
    "objectID": "slides/execexam/index.html#conclusions-and-future-work",
    "href": "slides/execexam/index.html#conclusions-and-future-work",
    "title": "ExecExam: A Tool to Facilitate Effective Executable Examinations in Python",
    "section": "Conclusions and Future Work",
    "text": "Conclusions and Future Work\n\n\nüìä Analytics and Instructor Features\n\nStore test outcomes and feedback over time\nVisualize student debugging and improvement paths\nLog LLM interactions to evaluate effectiveness\nHold out hidden test cases for instructor-only grading\n\nüß† Adaptive Feedback Loops\n\nTailor feedback complexity to student performance\nAllow students to rate different types of LLM feedback\n\n\n\n\n\nüîó GitHub Repository: https://github.com/GatorEducator/execexam\nüíª PyPI: https://pypi.org/project/execexam/"
  },
  {
    "objectID": "slides/index.html",
    "href": "slides/index.html",
    "title": "Slides",
    "section": "",
    "text": "View Presentation\nLearn about automated project checking and configuration\nUnderstand how to implement efficient project validation\nExplore best practices for automated testing\n\n\n\n\n\nView Presentation\nMaster GitHub workflow integration\nSet up GitHub Classroom for educational purposes\nImplement automated workflows with GitHub Actions\n\n\n\n\n\nView Presentation\nDiscover tools for creating executable examinations\nLearn about Python-based testing frameworks\nImplement effective examination strategies\n\n\n\n\n\nView Presentation\nCreate modern course websites\nImplement documentation with Mkdocs\nDeploy and maintain educational content\n\n\n\n\n\nUse the navigation menu at the top of the page to move between presentations. Each presentation includes:\n\nDetailed slides with code examples\nImplementation guides\nBest practices and recommendations\nAdditional resources and references"
  },
  {
    "objectID": "slides/index.html#available-presentations",
    "href": "slides/index.html#available-presentations",
    "title": "Slides",
    "section": "",
    "text": "View Presentation\nLearn about automated project checking and configuration\nUnderstand how to implement efficient project validation\nExplore best practices for automated testing\n\n\n\n\n\nView Presentation\nMaster GitHub workflow integration\nSet up GitHub Classroom for educational purposes\nImplement automated workflows with GitHub Actions\n\n\n\n\n\nView Presentation\nDiscover tools for creating executable examinations\nLearn about Python-based testing frameworks\nImplement effective examination strategies\n\n\n\n\n\nView Presentation\nCreate modern course websites\nImplement documentation with Mkdocs\nDeploy and maintain educational content"
  },
  {
    "objectID": "slides/index.html#navigation",
    "href": "slides/index.html#navigation",
    "title": "Slides",
    "section": "",
    "text": "Use the navigation menu at the top of the page to move between presentations. Each presentation includes:\n\nDetailed slides with code examples\nImplementation guides\nBest practices and recommendations\nAdditional resources and references"
  },
  {
    "objectID": "slides/github-workflow/index.html#the-challenge-of-programming-assignments",
    "href": "slides/github-workflow/index.html#the-challenge-of-programming-assignments",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "The Challenge of Programming Assignments",
    "text": "The Challenge of Programming Assignments\n\nDistribution of starter code\nCollection of submissions\nProviding automated feedback\nManaging final assessment\nCoordinating all these tasks efficiently"
  },
  {
    "objectID": "slides/github-workflow/index.html#traditional-assignment-workflow-challenges",
    "href": "slides/github-workflow/index.html#traditional-assignment-workflow-challenges",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Traditional Assignment Workflow Challenges",
    "text": "Traditional Assignment Workflow Challenges\n\nEmail submission creates version chaos\nManual testing is time-consuming and error-prone\nLimited visibility into student progress\nFeedback is often delayed and disconnected from code"
  },
  {
    "objectID": "slides/github-workflow/index.html#enter-github-github-classroom-and-github-actions",
    "href": "slides/github-workflow/index.html#enter-github-github-classroom-and-github-actions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Enter GitHub, GitHub Classroom, and GitHub Actions",
    "text": "Enter GitHub, GitHub Classroom, and GitHub Actions\nA complete ecosystem for programming education that:\n\nLeverages industry-standard tools\nPromotes good development practices\nAutomates tedious tasks\nProvides immediate feedback\nCreates a portfolio for students"
  },
  {
    "objectID": "slides/github-workflow/index.html#benefits-for-students",
    "href": "slides/github-workflow/index.html#benefits-for-students",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Benefits for Students",
    "text": "Benefits for Students\n\nLearn professional version control practices\nGet immediate feedback on their code\nClear indication of what to complete (TODOs)\nWork in a real development environment\nBuild a portfolio of completed projects\nPrepare for collaborative development"
  },
  {
    "objectID": "slides/github-workflow/index.html#benefits-for-instructors",
    "href": "slides/github-workflow/index.html#benefits-for-instructors",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Benefits for Instructors",
    "text": "Benefits for Instructors\n\nAutomated distribution of assignments\nCentralized submission collection\nAutomated testing and grading assistance\nClear visibility into student progress\nConsistent environment for all students\nRich feedback options (issues, PRs, comments)"
  },
  {
    "objectID": "slides/github-workflow/index.html#getting-started-the-workflow",
    "href": "slides/github-workflow/index.html#getting-started-the-workflow",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Getting Started: The Workflow",
    "text": "Getting Started: The Workflow\n\nCreate solution repository with tests\nCreate starter repository with TODOs\nSet up GitHub Classroom\nCreate and distribute assignments\nMonitor student progress\nProvide feedback through GitHub\nAssess completed work"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-1-creating-the-solution-repository",
    "href": "slides/github-workflow/index.html#step-1-creating-the-solution-repository",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 1: Creating the Solution Repository",
    "text": "Step 1: Creating the Solution Repository\n# Create new repository with complete solution\ngit init solution-repo\ncd solution-repo\n# Add your complete solution code\n\nInclude a comprehensive test suite with pytest\nSet up linting with flake8/pylint\nCreate a GitHub Actions workflow\nEnsure all tests pass with your solution"
  },
  {
    "objectID": "slides/github-workflow/index.html#solution-repository-structure",
    "href": "slides/github-workflow/index.html#solution-repository-structure",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Solution Repository Structure",
    "text": "Solution Repository Structure\nsolution-repo/\n‚îú‚îÄ‚îÄ src/\n‚îÇ   ‚îî‚îÄ‚îÄ solution.py\n‚îú‚îÄ‚îÄ tests/\n‚îÇ   ‚îî‚îÄ‚îÄ test_solution.py\n‚îú‚îÄ‚îÄ .github/\n‚îÇ   ‚îî‚îÄ‚îÄ workflows/\n‚îÇ       ‚îî‚îÄ‚îÄ python-checks.yml\n‚îú‚îÄ‚îÄ requirements.txt\n‚îî‚îÄ‚îÄ README.md"
  },
  {
    "objectID": "slides/github-workflow/index.html#github-actions-workflow-example",
    "href": "slides/github-workflow/index.html#github-actions-workflow-example",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "GitHub Actions Workflow Example",
    "text": "GitHub Actions Workflow Example\nname: Python Checks\n\non: [push]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: '3.10'\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install pytest flake8\n        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi\n    - name: Lint with flake8\n      run: flake8 src tests\n    - name: Test with pytest\n      run: pytest"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-2-implementation-ablation---creating-the-starter",
    "href": "slides/github-workflow/index.html#step-2-implementation-ablation---creating-the-starter",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 2: Implementation Ablation - Creating the Starter",
    "text": "Step 2: Implementation Ablation - Creating the Starter\nWhat is implementation ablation?\n\nSystematically remove implementation details from your solution\nReplace with well-documented TODOs\nLeave structure intact for students to complete\nKeep tests to guide students"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-of-implementation-ablation",
    "href": "slides/github-workflow/index.html#example-of-implementation-ablation",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example of Implementation Ablation",
    "text": "Example of Implementation Ablation\nSolution code:\ndef calculate_grade(scores):\n    total = sum(scores)\n    average = total / len(scores)\n    \n    if average &gt;= 90:\n        return 'A'\n    elif average &gt;= 80:\n        return 'B'\n    elif average &gt;= 70:\n        return 'C'\n    elif average &gt;= 60:\n        return 'D'\n    else:\n        return 'F'"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-of-implementation-ablation-1",
    "href": "slides/github-workflow/index.html#example-of-implementation-ablation-1",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example of Implementation Ablation",
    "text": "Example of Implementation Ablation\nStarter code:\ndef calculate_grade(scores):\n    # TODO: Calculate the average score\n    # Hint: You'll need to find the sum and divide by the count\n    \n    # TODO: Determine the letter grade based on the average\n    # A: 90+, B: 80-89, C: 70-79, D: 60-69, F: below 60\n    \n    return None  # Replace with your implementation"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-3-setting-up-github-classroom",
    "href": "slides/github-workflow/index.html#step-3-setting-up-github-classroom",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 3: Setting Up GitHub Classroom",
    "text": "Step 3: Setting Up GitHub Classroom\n\nCreate a GitHub organization for your class\nAuthorize GitHub Classroom\nCreate a new classroom linked to your organization\nInvite teaching assistants as organization admins"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-4-creating-an-assignment",
    "href": "slides/github-workflow/index.html#step-4-creating-an-assignment",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 4: Creating an Assignment",
    "text": "Step 4: Creating an Assignment\n\nSelect ‚ÄúNew Assignment‚Äù in GitHub Classroom\nChoose individual or group assignment\nName your assignment\nSet deadline and visibility options\nImport your starter repository\nEnable automated testing"
  },
  {
    "objectID": "slides/github-workflow/index.html#step-5-distributing-the-assignment",
    "href": "slides/github-workflow/index.html#step-5-distributing-the-assignment",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Step 5: Distributing the Assignment",
    "text": "Step 5: Distributing the Assignment\n\nGenerate invitation link\nShare with students\nStudents click link and accept assignment\nGitHub automatically creates private student repositories\nStudents clone locally and start working"
  },
  {
    "objectID": "slides/github-workflow/index.html#student-experience",
    "href": "slides/github-workflow/index.html#student-experience",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Student Experience",
    "text": "Student Experience\n\nAccept assignment through unique link\nRepository created with starter code\nClone repository locally\nComplete TODOs guided by tests\nPush changes to GitHub\nGet immediate feedback from GitHub Actions"
  },
  {
    "objectID": "slides/github-workflow/index.html#automated-feedback-with-github-actions",
    "href": "slides/github-workflow/index.html#automated-feedback-with-github-actions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Automated Feedback with GitHub Actions",
    "text": "Automated Feedback with GitHub Actions\n\nTests run automatically on every push\nStudents see red ‚ùå or green ‚úÖ status checks\nDetailed feedback in Actions tab\nTesting failures highlight what‚Äôs still incomplete"
  },
  {
    "objectID": "slides/github-workflow/index.html#comprehensive-feedback-options",
    "href": "slides/github-workflow/index.html#comprehensive-feedback-options",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Comprehensive Feedback Options",
    "text": "Comprehensive Feedback Options\nGitHub provides multiple feedback channels:\n\nIn-line comments on specific code lines\nIssue creation for general feedback\nPull request reviews for detailed assessment\nAutomated checks for immediate technical feedback"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-issue-based-feedback",
    "href": "slides/github-workflow/index.html#example-issue-based-feedback",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example: Issue-Based Feedback",
    "text": "Example: Issue-Based Feedback\n\n## Algorithm Efficiency\n\nYour solution works but uses O(n¬≤) time complexity when \nan O(n) solution is possible. Consider using a hash map \ninstead of nested loops.\n\n## Code Structure\n\nGreat job breaking down the problem into functions!\nYour solution is well-organized and easy to follow."
  },
  {
    "objectID": "slides/github-workflow/index.html#optional-integrating-with-external-tools",
    "href": "slides/github-workflow/index.html#optional-integrating-with-external-tools",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Optional: Integrating with External Tools",
    "text": "Optional: Integrating with External Tools\nGitHub Actions can integrate with:\n\nPytest for test coverage\nFlake8/Pylint for style checking\nChasten for AST-based pattern checking\nCustom grading tool such as ExecExam\nAnd many more!"
  },
  {
    "objectID": "slides/github-workflow/index.html#example-integration-with-chasten",
    "href": "slides/github-workflow/index.html#example-integration-with-chasten",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Example: Integration with Chasten",
    "text": "Example: Integration with Chasten\n- name: Check with Chasten\n  run: |\n    pip install chasten\n    chasten check --config .chasten.yml src/"
  },
  {
    "objectID": "slides/github-workflow/index.html#practical-tips-from-experience",
    "href": "slides/github-workflow/index.html#practical-tips-from-experience",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Practical Tips from Experience",
    "text": "Practical Tips from Experience\n\nStart with simple assignments to build familiarity\nCreate clear README files with setup instructions\nInclude CI badges in README to show test status\nUse descriptive commit messages for teaching moments\nConsider a practice assignment for GitHub onboarding"
  },
  {
    "objectID": "slides/github-workflow/index.html#common-challenges-and-solutions",
    "href": "slides/github-workflow/index.html#common-challenges-and-solutions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Common Challenges and Solutions",
    "text": "Common Challenges and Solutions\n\n\n\nChallenges\nSolutions\n\n\n\n\nGit confusion\nProvide cheat sheet and office hours\n\n\nMerge conflicts\nTeach basic conflict resolution\n\n\nTest failures\nMake test output student-friendly\n\n\nMissing setup\nInclude detailed environment setup\n\n\nPrivacy concerns\nUse private repositories"
  },
  {
    "objectID": "slides/github-workflow/index.html#limitations-to-be-aware-of",
    "href": "slides/github-workflow/index.html#limitations-to-be-aware-of",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Limitations to Be Aware Of",
    "text": "Limitations to Be Aware Of\n\nLearning curve for Git and GitHub\nSetup time for first assignments\nNeed for internet access\nManaging organization permissions"
  },
  {
    "objectID": "slides/github-workflow/index.html#key-takeaways",
    "href": "slides/github-workflow/index.html#key-takeaways",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nGitHub Classroom creates realistic development workflows\nAutomated feedback saves instructor time\nStudents learn industry-standard tools and practices\nImplementation ablation guides student learning\nComprehensive feedback through multiple channels"
  },
  {
    "objectID": "slides/github-workflow/index.html#questions",
    "href": "slides/github-workflow/index.html#questions",
    "title": "Up and Running with GitHub, GitHub Classroom, and GitHub Actions",
    "section": "Questions?",
    "text": "Questions?\nThank you for your attention!"
  },
  {
    "objectID": "slides/chasten/index.html#the-problem-with-traditional-static-analysis",
    "href": "slides/chasten/index.html#the-problem-with-traditional-static-analysis",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "The Problem with Traditional Static Analysis",
    "text": "The Problem with Traditional Static Analysis\nRegular expression (regex) ‚â† code understanding\n\nFails on structural nuance\nHard to maintain across formatting/styles"
  },
  {
    "objectID": "slides/chasten/index.html#the-problem-with-traditional-static-analysis-1",
    "href": "slides/chasten/index.html#the-problem-with-traditional-static-analysis-1",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "The Problem with Traditional Static Analysis",
    "text": "The Problem with Traditional Static Analysis\nAST tools are powerful but complex\n\nRequire managing node types\nDifficult to prototype new rules"
  },
  {
    "objectID": "slides/chasten/index.html#chasten",
    "href": "slides/chasten/index.html#chasten",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Chasten",
    "text": "Chasten\nA Python program that uses XPATH expressions to find patterns in the abstract syntax tree (AST) of a Python program"
  },
  {
    "objectID": "slides/chasten/index.html#what-is-an-ast",
    "href": "slides/chasten/index.html#what-is-an-ast",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "What is an AST?",
    "text": "What is an AST?\nAbstract Syntax Tree (AST) = structured representation of code\nx = 1 + 2\nAssign\n ‚îú‚îÄ‚îÄ Name(x)\n ‚îî‚îÄ‚îÄ BinOp(+)\n      ‚îú‚îÄ‚îÄ Constant(1)\n      ‚îî‚îÄ‚îÄ Constant(2)"
  },
  {
    "objectID": "slides/chasten/index.html#why-xpath",
    "href": "slides/chasten/index.html#why-xpath",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Why XPATH?",
    "text": "Why XPATH?\n\n‚úÖ Perfect for navigating ASTs\n‚úÖ Easy to write and understand\n\n/FunctionDef/body//If[ancestor::If and not(parent::orelse)]\n‚Äì&gt; Matches function with double nested if"
  },
  {
    "objectID": "slides/chasten/index.html#features",
    "href": "slides/chasten/index.html#features",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Features",
    "text": "Features\n\n‚ú® Easy-to-configure, automated analysis of a Python program‚Äôs abstract syntax tree\nüìÉ Flexible and easy-to-use YAML-based configuration file for describing analyses and checks\nüöÄ Configurable saving of analysis results in the JSON, CSV, or SQLite formats\nüåÑ Interactive results analysis through the use of a locally running datasette server"
  },
  {
    "objectID": "slides/chasten/index.html#comparison-for-education-research",
    "href": "slides/chasten/index.html#comparison-for-education-research",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Comparison for Education & Research",
    "text": "Comparison for Education & Research"
  },
  {
    "objectID": "slides/chasten/index.html#comparison-for-education-research-1",
    "href": "slides/chasten/index.html#comparison-for-education-research-1",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Comparison for Education & Research",
    "text": "Comparison for Education & Research\n\n\n\n\n\n\n\n\n\nFeature\nChasten\nRuff\nPylint\n\n\n\n\nCustom Rule Creation\n‚úÖ Write in YAML with XPath ‚Äî no coding\n‚ùå Hard-coded; not extensible\n‚ö†Ô∏è Requires Python plugin"
  },
  {
    "objectID": "slides/chasten/index.html#comparison-for-education-research-2",
    "href": "slides/chasten/index.html#comparison-for-education-research-2",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Comparison for Education & Research",
    "text": "Comparison for Education & Research\n\n\n\n\n\n\n\n\n\nFeature\nChasten\nRuff\nPylint\n\n\n\n\nLearning AST Concepts\n‚úÖ Transparent ‚Äî great for teaching ASTs\n‚ùå Abstracted away\n‚ö†Ô∏è Indirect via rule behavior"
  },
  {
    "objectID": "slides/chasten/index.html#comparison-for-education-research-3",
    "href": "slides/chasten/index.html#comparison-for-education-research-3",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Comparison for Education & Research",
    "text": "Comparison for Education & Research\n\n\n\n\n\n\n\n\n\nFeature\nChasten\nRuff\nPylint\n\n\n\n\nResearch Use\n‚úÖ Structured output + pattern mining\n‚ùå Not suited for deep analysis\n‚ö†Ô∏è Output not researcher-friendly"
  },
  {
    "objectID": "slides/chasten/index.html#comparison-for-education-research-4",
    "href": "slides/chasten/index.html#comparison-for-education-research-4",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Comparison for Education & Research",
    "text": "Comparison for Education & Research\n\n\n\n\n\n\n\n\n\nFeature\nChasten\nRuff\nPylint\n\n\n\n\nOutput Formats\n‚úÖ JSON, CSV, SQLite (queryable)\nText, JSON\nText, JSON"
  },
  {
    "objectID": "slides/chasten/index.html#comparison-for-education-research-5",
    "href": "slides/chasten/index.html#comparison-for-education-research-5",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Comparison for Education & Research",
    "text": "Comparison for Education & Research\n\n\n\n\n\n\n\n\n\nFeature\nChasten\nRuff\nPylint\n\n\n\n\nInteractive Exploration\n‚úÖ Datasette dashboards (SQLite-ready)\n‚ùå None\n‚ùå None"
  },
  {
    "objectID": "slides/chasten/index.html#chasten-workflow",
    "href": "slides/chasten/index.html#chasten-workflow",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Chasten Workflow",
    "text": "Chasten Workflow"
  },
  {
    "objectID": "slides/chasten/index.html#key-takeaways",
    "href": "slides/chasten/index.html#key-takeaways",
    "title": "Automated and Configurable Programming Project Checking with Chasten",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\n‚úÖ Declarative rule-writing with XPath\nEasily define grading criteria and static analysis checks ‚Äî no need to write Python plugins.\nüß† Teachable insights into code structure\nHelps students understand Abstract Syntax Trees (ASTs) and how code is interpreted structurally.\nüìä Structured, explorable outputs\nExport results to SQLite and use Datasette to visualize errors, coverage, and student patterns.\nüß™ Supports research and pedagogy\nUseful for analyzing coding behavior at scale, detecting common anti-patterns in student code.\nüìö Integrates into grading pipelines\nRun Chasten on student submissions to check for required docstrings, type hints, nested logic, etc."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Conference Presentations",
    "section": "",
    "text": "Welcome to our collection of conference presentations focusing on educational technology and development tools. These presentations cover various aspects of modern software development, automated testing, and educational technology implementation."
  },
  {
    "objectID": "index.html#available-presentations",
    "href": "index.html#available-presentations",
    "title": "Conference Presentations",
    "section": "Available Presentations",
    "text": "Available Presentations\n\nAutomated and Configurable Programming Project Checking with Chasten\n\nLearn about automated project checking and configuration\nUnderstand how to implement efficient project validation\nExplore best practices for automated testing\n\nUp and Running with GitHub, GitHub Classroom, and GitHub Actions\n\nMaster GitHub workflow integration\nSet up GitHub Classroom for educational purposes\nImplement automated workflows with GitHub Actions\n\nExecExam: A Tool to Facilitate Effective Executable Examinations in Python\n\nDiscover tools for creating executable examinations\nLearn about Python-based testing frameworks\nImplement effective examination strategies\n\nBuilding and Deploying Course Websites with Python, Quarto, and Mkdocs\n\nCreate modern course websites\nImplement documentation with Mkdocs\nDeploy and maintain educational content"
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "Conference Presentations",
    "section": "Getting Started",
    "text": "Getting Started\nEach presentation is available in the slides section. You can navigate through the presentations using the navigation menu above. Each presentation includes:\n\nDetailed slides with code examples\nImplementation guides\nBest practices and recommendations\nAdditional resources and references"
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "Conference Presentations",
    "section": "Contributing",
    "text": "Contributing\nThese presentations are open source and available for educational purposes. Feel free to use and modify them according to your needs. If you find any issues or have suggestions for improvements, please contribute through our GitHub repository."
  }
]